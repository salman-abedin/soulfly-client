{"ast":null,"code":"var _jsxFileName = \"/home/salman/.local/share/dot_files/Storage/Workspace/soulfly/client/src/App.js\";\nimport React from 'react';\nimport Input from './Input';\nimport Messages from './Messages';\n\nconst App = () => {\n  const [messages, setMessages] = useState([]);\n  const socketRef = useRef();\n  useEffect(() => {\n    socketRef.current = socketIOClient('http://localhost:5000'); // setTimeout(() =>{\n    //    socketRef.current.disconnect()\n    // }, 2000)\n\n    socketRef.current.on('message', msg => {\n      setMessages(messages => [...messages, msg]);\n    });\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, []);\n\n  const typing = () => {\n    socketRef.current.emit('typing');\n  };\n\n  const send = msg => {\n    socketRef.current.emit('message', msg);\n  };\n\n  const seen = () => {\n    socketRef.current.emit('seen');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Messages, {\n    messages: messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    onSendMessage: msg => send(msg),\n    onInput: typing,\n    onFocus: seen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 10\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/salman/.local/share/dot_files/Storage/Workspace/soulfly/client/src/App.js"],"names":["React","Input","Messages","App","messages","setMessages","useState","socketRef","useRef","useEffect","current","socketIOClient","on","msg","disconnect","typing","emit","send","seen"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAEf,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BC,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMC,SAAS,GAAGC,MAAM,EAAxB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACbF,IAAAA,SAAS,CAACG,OAAV,GAAoBC,cAAc,CAAC,uBAAD,CAAlC,CADa,CAGb;AACA;AACA;;AAEAJ,IAAAA,SAAS,CAACG,OAAV,CAAkBE,EAAlB,CAAqB,SAArB,EAAgCC,GAAG,IAAI;AACpCR,MAAAA,WAAW,CAACD,QAAQ,IAAI,CAAC,GAAGA,QAAJ,EAAcS,GAAd,CAAb,CAAX;AACF,KAFD;AAIA,WAAO,MAAM;AACVN,MAAAA,SAAS,CAACG,OAAV,CAAkBI,UAAlB;AACF,KAFD;AAGF,GAdQ,EAcN,EAdM,CAAT;;AAgBA,QAAMC,MAAM,GAAG,MAAM;AAClBR,IAAAA,SAAS,CAACG,OAAV,CAAkBM,IAAlB,CAAuB,QAAvB;AACF,GAFD;;AAIA,QAAMC,IAAI,GAAIJ,GAAD,IAAS;AACnBN,IAAAA,SAAS,CAACG,OAAV,CAAkBM,IAAlB,CAAuB,SAAvB,EAAkCH,GAAlC;AACF,GAFD;;AAIA,QAAMK,IAAI,GAAG,MAAM;AAChBX,IAAAA,SAAS,CAACG,OAAV,CAAkBM,IAAlB,CAAuB,MAAvB;AACF,GAFD;;AAIA,sBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEZ,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,eAEG,oBAAC,KAAD;AAAO,IAAA,aAAa,EAAES,GAAG,IAAII,IAAI,CAACJ,GAAD,CAAjC;AAAwC,IAAA,OAAO,EAAEE,MAAjD;AAAyD,IAAA,OAAO,EAAEG,IAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,CADH;AAOF,CAzCD;;AA2CA,eAAef,GAAf","sourcesContent":["import React from 'react';\nimport Input from './Input';\nimport Messages from './Messages';\n\nconst App = () => {\n\n   const [messages, setMessages] = useState([]);\n\n   const socketRef = useRef();\n\n   useEffect(() => {\n      socketRef.current = socketIOClient('http://localhost:5000');\n\n      // setTimeout(() =>{\n      //    socketRef.current.disconnect()\n      // }, 2000)\n\n      socketRef.current.on('message', msg => {\n         setMessages(messages => [...messages, msg ])\n      })\n\n      return () => {\n         socketRef.current.disconnect();\n      };\n   }, []);\n\n   const typing = () => {\n      socketRef.current.emit('typing');\n   };\n\n   const send = (msg) => {\n      socketRef.current.emit('message', msg);\n   };\n\n   const seen = () => {\n      socketRef.current.emit('seen');\n   };\n\n   return (\n      <div>\n         <Messages messages={messages} />\n         <Input onSendMessage={msg => send(msg)} onInput={typing} onFocus={seen}/>\n      </div>\n   );\n\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}