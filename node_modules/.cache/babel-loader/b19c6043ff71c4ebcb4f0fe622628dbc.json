{"ast":null,"code":"import socketIOClient from 'socket.io-client';\nimport { useState, useEffect, useRef } from 'react';\n\nconst useChat = () => {\n  const [messages, setMessages] = useState([]);\n  const socketRef = useRef();\n\n  const sendMessage = msg => {\n    socketRef.current.emit('message', msg);\n  };\n\n  useEffect(() => {\n    socketRef.current = socketIOClient('http://localhost:5000'); // setTimeout(() =>{\n    //    socketRef.current.disconnect()\n    // }, 2000)\n\n    socketRef.current.on('message', msg => {\n      setMessages(messages => [...messages, msg]);\n    });\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, []); // const typing = () => {\n  //    socketRef.current.emit('typing');\n  // };\n\n  return {\n    messages,\n    sendMessage\n  };\n};\n\nexport default useChat;","map":{"version":3,"sources":["/home/salman/.local/share/dot_files/Storage/Workspace/soulfly/client.old/src/useChat.js"],"names":["socketIOClient","useState","useEffect","useRef","useChat","messages","setMessages","socketRef","sendMessage","msg","current","emit","on","disconnect"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,kBAA3B;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACnB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMM,SAAS,GAAGJ,MAAM,EAAxB;;AAEA,QAAMK,WAAW,GAAIC,GAAD,IAAS;AAC1BF,IAAAA,SAAS,CAACG,OAAV,CAAkBC,IAAlB,CAAuB,SAAvB,EAAkCF,GAAlC;AACF,GAFD;;AAIAP,EAAAA,SAAS,CAAC,MAAM;AACbK,IAAAA,SAAS,CAACG,OAAV,GAAoBV,cAAc,CAAC,uBAAD,CAAlC,CADa,CAGb;AACA;AACA;;AAEAO,IAAAA,SAAS,CAACG,OAAV,CAAkBE,EAAlB,CAAqB,SAArB,EAAgCH,GAAG,IAAI;AACpCH,MAAAA,WAAW,CAACD,QAAQ,IAAI,CAAC,GAAGA,QAAJ,EAAcI,GAAd,CAAb,CAAX;AACF,KAFD;AAIA,WAAO,MAAM;AACVF,MAAAA,SAAS,CAACG,OAAV,CAAkBG,UAAlB;AACF,KAFD;AAGF,GAdQ,EAcN,EAdM,CAAT,CATmB,CA0BnB;AACA;AACA;;AAEA,SAAO;AAAER,IAAAA,QAAF;AAAYG,IAAAA;AAAZ,GAAP;AACF,CA/BD;;AAiCA,eAAeJ,OAAf","sourcesContent":["import socketIOClient from 'socket.io-client';\nimport { useState, useEffect, useRef } from 'react';\n\nconst useChat = () => {\n   const [messages, setMessages] = useState([]);\n\n   const socketRef = useRef();\n\n   const sendMessage = (msg) => {\n      socketRef.current.emit('message', msg);\n   };\n\n   useEffect(() => {\n      socketRef.current = socketIOClient('http://localhost:5000');\n\n      // setTimeout(() =>{\n      //    socketRef.current.disconnect()\n      // }, 2000)\n\n      socketRef.current.on('message', msg => {\n         setMessages(messages => [...messages, msg ])\n      })\n\n      return () => {\n         socketRef.current.disconnect();\n      };\n   }, []);\n\n\n   // const typing = () => {\n   //    socketRef.current.emit('typing');\n   // };\n\n   return { messages, sendMessage };\n};\n\nexport default useChat;\n"]},"metadata":{},"sourceType":"module"}