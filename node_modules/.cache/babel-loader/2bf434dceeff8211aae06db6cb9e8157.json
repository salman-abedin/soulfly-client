{"ast":null,"code":"import socketIOClient from 'socket.io-client';\nimport { useState, useEffect, useRef } from 'react';\n\nconst useSocket = () => {\n  const [messages, setMessages] = useState([]);\n  const [seenState, setSeen] = useState(true);\n  const [usr, setUsr] = useState('');\n  const socketRef = useRef();\n  useEffect(() => {\n    setUsr(prompt('Tell us your name'));\n    socketRef.current = socketIOClient('http://localhost:5000');\n    socketRef.current.on('typing', usr => {\n      console.log(`${usr} is typing`);\n    });\n    socketRef.current.on('message', msg => {\n      setMessages(messages => [...messages, msg]);\n      setSeen(false);\n    });\n    socketRef.current.on('seen', usr => {\n      console.log(`seen by ${usr}`);\n    });\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, []);\n\n  const typing = () => {\n    socketRef.current.emit('typing', usr);\n  };\n\n  const send = msg => {\n    socketRef.current.emit('message', msg);\n  };\n\n  const seen = () => {\n    !seenState && socketRef.current.emit('seen') && setSeen(true);\n  };\n\n  return {\n    messages,\n    send,\n    typing,\n    seen\n  };\n};\n\nexport default useChat;","map":{"version":3,"sources":["/home/salman/.local/share/dot_files/Storage/Workspace/soulfly/client/src/useChat.js"],"names":["socketIOClient","useState","useEffect","useRef","useSocket","messages","setMessages","seenState","setSeen","usr","setUsr","socketRef","prompt","current","on","console","log","msg","disconnect","typing","emit","send","seen","useChat"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,kBAA3B;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,SAAD,EAAYC,OAAZ,IAAuBP,QAAQ,CAAC,IAAD,CAArC;AACA,QAAM,CAACQ,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC,EAAD,CAA9B;AAEA,QAAMU,SAAS,GAAGR,MAAM,EAAxB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACbQ,IAAAA,MAAM,CAACE,MAAM,CAAC,mBAAD,CAAP,CAAN;AACAD,IAAAA,SAAS,CAACE,OAAV,GAAoBb,cAAc,CAAC,uBAAD,CAAlC;AAEAW,IAAAA,SAAS,CAACE,OAAV,CAAkBC,EAAlB,CAAqB,QAArB,EAA+BL,GAAG,IAAI;AACnCM,MAAAA,OAAO,CAACC,GAAR,CAAa,GAAEP,GAAI,YAAnB;AACF,KAFD;AAIAE,IAAAA,SAAS,CAACE,OAAV,CAAkBC,EAAlB,CAAqB,SAArB,EAAgCG,GAAG,IAAI;AACpCX,MAAAA,WAAW,CAACD,QAAQ,IAAI,CAAC,GAAGA,QAAJ,EAAcY,GAAd,CAAb,CAAX;AACAT,MAAAA,OAAO,CAAC,KAAD,CAAP;AACF,KAHD;AAKAG,IAAAA,SAAS,CAACE,OAAV,CAAkBC,EAAlB,CAAqB,MAArB,EAA6BL,GAAG,IAAI;AACjCM,MAAAA,OAAO,CAACC,GAAR,CAAa,WAAUP,GAAI,EAA3B;AACF,KAFD;AAIA,WAAO,MAAM;AACVE,MAAAA,SAAS,CAACE,OAAV,CAAkBK,UAAlB;AACF,KAFD;AAGF,GApBQ,EAoBN,EApBM,CAAT;;AAsBA,QAAMC,MAAM,GAAG,MAAM;AAClBR,IAAAA,SAAS,CAACE,OAAV,CAAkBO,IAAlB,CAAuB,QAAvB,EAAiCX,GAAjC;AACF,GAFD;;AAIA,QAAMY,IAAI,GAAGJ,GAAG,IAAI;AACjBN,IAAAA,SAAS,CAACE,OAAV,CAAkBO,IAAlB,CAAuB,SAAvB,EAAkCH,GAAlC;AACF,GAFD;;AAIA,QAAMK,IAAI,GAAG,MAAM;AAChB,KAACf,SAAD,IAAcI,SAAS,CAACE,OAAV,CAAkBO,IAAlB,CAAuB,MAAvB,CAAd,IAAgDZ,OAAO,CAAC,IAAD,CAAvD;AACF,GAFD;;AAIA,SAAO;AAAEH,IAAAA,QAAF;AAAYgB,IAAAA,IAAZ;AAAkBF,IAAAA,MAAlB;AAA0BG,IAAAA;AAA1B,GAAP;AAEF,CA3CD;;AA6CA,eAAeC,OAAf","sourcesContent":["import socketIOClient from 'socket.io-client';\nimport { useState, useEffect, useRef } from 'react';\n\nconst useSocket = () => {\n   const [messages, setMessages] = useState([]);\n   const [seenState, setSeen] = useState(true);\n   const [usr, setUsr] = useState('');\n\n   const socketRef = useRef();\n\n   useEffect(() => {\n      setUsr(prompt('Tell us your name'))\n      socketRef.current = socketIOClient('http://localhost:5000');\n\n      socketRef.current.on('typing', usr => {\n         console.log(`${usr} is typing`)\n      })\n\n      socketRef.current.on('message', msg => {\n         setMessages(messages => [...messages, msg ])\n         setSeen(false)\n      })\n\n      socketRef.current.on('seen', usr => {\n         console.log(`seen by ${usr}`)\n      })\n\n      return () => {\n         socketRef.current.disconnect();\n      };\n   }, []);\n\n   const typing = () => {\n      socketRef.current.emit('typing', usr);\n   };\n\n   const send = msg => {\n      socketRef.current.emit('message', msg);\n   };\n\n   const seen = () => {\n      !seenState && socketRef.current.emit('seen') && setSeen(true)\n   };\n\n   return { messages, send, typing, seen };\n\n};\n\nexport default useChat;\n"]},"metadata":{},"sourceType":"module"}