{"ast":null,"code":"var _jsxFileName = \"/home/salman/.local/share/dot_files/Storage/Workspace/soulfly/client/src/App.js\";\nimport Input from './Input';\nimport Messages from './Messages';\nimport React, { useState, useEffect, useRef } from 'react';\nimport socketIOClient from 'socket.io-client';\n\nconst App = () => {\n  const [messages, setMessages] = useState([]);\n  const [seen, setSeen] = useState(true);\n  const socketRef = useRef();\n  useEffect(() => {\n    socketRef.current = socketIOClient('http://localhost:5000');\n    socketRef.current.on('message', msg => {\n      setMessages(messages => [...messages, msg]);\n      setSeen(false);\n    });\n    socketRef.current.on('seen', data => {\n      setMessages(messages => [...messages, 'message seen']);\n    });\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, []);\n\n  const typing = () => {\n    // console.log('typing')\n    socketRef.current.emit('typing');\n  };\n\n  const send = msg => {\n    socketRef.current.emit('message', msg);\n  };\n\n  const saw = () => {\n    !seen && socketRef.current.emit('seen') && setSeen(true); // socketRef.current.emit('seen')\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Messages, {\n    messages: messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    onSendMessage: msg => send(msg),\n    onInput: typing,\n    onFocus: saw,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/salman/.local/share/dot_files/Storage/Workspace/soulfly/client/src/App.js"],"names":["Input","Messages","React","useState","useEffect","useRef","socketIOClient","App","messages","setMessages","seen","setSeen","socketRef","current","on","msg","data","disconnect","typing","emit","send","saw"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAkD,OAAlD;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAEf,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAAhC;AAEA,QAAMS,SAAS,GAAGP,MAAM,EAAxB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACbQ,IAAAA,SAAS,CAACC,OAAV,GAAoBP,cAAc,CAAC,uBAAD,CAAlC;AAEAM,IAAAA,SAAS,CAACC,OAAV,CAAkBC,EAAlB,CAAqB,SAArB,EAAgCC,GAAG,IAAI;AACpCN,MAAAA,WAAW,CAACD,QAAQ,IAAI,CAAC,GAAGA,QAAJ,EAAcO,GAAd,CAAb,CAAX;AACAJ,MAAAA,OAAO,CAAC,KAAD,CAAP;AACF,KAHD;AAKAC,IAAAA,SAAS,CAACC,OAAV,CAAkBC,EAAlB,CAAqB,MAArB,EAA6BE,IAAI,IAAI;AAClCP,MAAAA,WAAW,CAACD,QAAQ,IAAI,CAAC,GAAGA,QAAJ,EAAc,cAAd,CAAb,CAAX;AACF,KAFD;AAIA,WAAO,MAAM;AACVI,MAAAA,SAAS,CAACC,OAAV,CAAkBI,UAAlB;AACF,KAFD;AAGF,GAfQ,EAeN,EAfM,CAAT;;AAiBA,QAAMC,MAAM,GAAG,MAAM;AAClB;AACAN,IAAAA,SAAS,CAACC,OAAV,CAAkBM,IAAlB,CAAuB,QAAvB;AACF,GAHD;;AAKA,QAAMC,IAAI,GAAIL,GAAD,IAAS;AACnBH,IAAAA,SAAS,CAACC,OAAV,CAAkBM,IAAlB,CAAuB,SAAvB,EAAkCJ,GAAlC;AACF,GAFD;;AAIA,QAAMM,GAAG,GAAG,MAAM;AACf,KAACX,IAAD,IAASE,SAAS,CAACC,OAAV,CAAkBM,IAAlB,CAAuB,MAAvB,CAAT,IAA2CR,OAAO,CAAC,IAAD,CAAlD,CADe,CAEf;AACF,GAHD;;AAKA,sBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEH,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,eAEG,oBAAC,KAAD;AAAO,IAAA,aAAa,EAAEO,GAAG,IAAIK,IAAI,CAACL,GAAD,CAAjC;AAAwC,IAAA,OAAO,EAAEG,MAAjD;AAAyD,IAAA,OAAO,EAAEG,GAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,CADH;AAOF,CA7CD;;AA+CA,eAAed,GAAf","sourcesContent":["import Input from './Input';\nimport Messages from './Messages';\nimport React,{ useState, useEffect, useRef } from 'react';\nimport socketIOClient from 'socket.io-client';\n\nconst App = () => {\n\n   const [messages, setMessages] = useState([]);\n   const [seen, setSeen] = useState(true);\n\n   const socketRef = useRef();\n\n   useEffect(() => {\n      socketRef.current = socketIOClient('http://localhost:5000');\n\n      socketRef.current.on('message', msg => {\n         setMessages(messages => [...messages, msg ])\n         setSeen(false)\n      })\n\n      socketRef.current.on('seen', data => {\n         setMessages(messages => [...messages, 'message seen' ])\n      })\n\n      return () => {\n         socketRef.current.disconnect();\n      };\n   }, []);\n\n   const typing = () => {\n      // console.log('typing')\n      socketRef.current.emit('typing');\n   };\n\n   const send = (msg) => {\n      socketRef.current.emit('message', msg);\n   };\n\n   const saw = () => {\n      !seen && socketRef.current.emit('seen') && setSeen(true)\n      // socketRef.current.emit('seen')\n   };\n\n   return (\n      <div>\n         <Messages messages={messages} />\n         <Input onSendMessage={msg => send(msg)} onInput={typing} onFocus={saw}/>\n      </div>\n   );\n\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}