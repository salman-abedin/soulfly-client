{"ast":null,"code":"var _jsxFileName = \"/home/salman/.local/share/dot_files/Storage/Workspace/soulfly/client/src/Home/Home.js\";\nimport './Home.css';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport queryString from 'query-string';\nimport socketIOClient from 'socket.io-client';\nlet socket;\n\nconst Home = ({\n  location\n}) => {\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [seen, setSeen] = useState(false);\n  const [seenUsers, setSeenUsers] = useState([]);\n  const [users, setUsers] = useState([]);\n  const {\n    name\n  } = queryString.parse(location.search);\n  useEffect(() => {\n    socket = socketIOClient('localhost:5000');\n    socket.emit('join', name);\n    socket.on('init', usrList => {\n      setUsers(users => usrList);\n      setMessages(oldMessages => [...oldMessages, {\n        class: 'admin',\n        content: `Welcome to the server ${name}`\n      }]);\n    });\n    socket.on('usrJoin', (users, name) => {\n      setUsers(oldUsers => users);\n      setMessages(oldMessages => [...oldMessages, {\n        class: 'admin',\n        content: `${name} has joined`\n      }]);\n    });\n    socket.on('message', message => {\n      setMessages(oldMessages => [...oldMessages, message]);\n      setSeen(false);\n    });\n    socket.on('seen', name => {\n      setSeenUsers(oldSeenUsers => [...oldSeenUsers, name]);\n    });\n    socket.on('usrLeave', (users, name) => {\n      setUsers(oldUsers => users);\n      setMessages(oldMessages => [...oldMessages, {\n        class: 'admin',\n        content: `${name} has left`\n      }]);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: '/',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }\n  }, \"Logout\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Soulfly\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"users\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, users.map((user, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }\n  }, user))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"log\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 16\n    }\n  }, messages.map((message, index) => {\n    if (message.class === 'admin') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: message.class,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 28\n        }\n      }, message.content);\n    } else {\n      const classType = message.id === socket.id ? 'own-messages' : 'others-messages';\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classType,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 28\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 31\n        }\n      }, message.name, \": \"), message.content);\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setMessage(e.target.value) // onInput={(e) => showTyping()}\n    ,\n    onFocus: e => {\n      !seen && socket.emit('seen', name);\n      setSeen(true);\n    },\n    value: message,\n    onKeyDown: e => {\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        socket.emit('message', {\n          name: name,\n          id: socket.id,\n          content: message\n        });\n        setMessage('');\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 16\n    }\n  }))));\n};\n\nexport default Home;","map":{"version":3,"sources":["/home/salman/.local/share/dot_files/Storage/Workspace/soulfly/client/src/Home/Home.js"],"names":["React","useState","useEffect","Link","queryString","socketIOClient","socket","Home","location","messages","setMessages","message","setMessage","seen","setSeen","seenUsers","setSeenUsers","users","setUsers","name","parse","search","emit","on","usrList","oldMessages","class","content","oldUsers","oldSeenUsers","map","user","index","classType","id","e","target","value","key","preventDefault"],"mappings":"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","sourcesContent":["import './Home.css';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport queryString from 'query-string';\nimport socketIOClient from 'socket.io-client';\n\nlet socket;\n\nconst Home = ({ location }) => {\n   const [messages, setMessages] = useState([]);\n   const [message, setMessage] = useState('');\n   const [seen, setSeen] = useState(false);\n   const [seenUsers, setSeenUsers] = useState([]);\n   const [users, setUsers] = useState([]);\n   const { name } = queryString.parse(location.search);\n\n   useEffect(() => {\n      socket = socketIOClient('localhost:5000');\n\n      socket.emit('join', name);\n\n      socket.on('init', (usrList) => {\n         setUsers((users) => usrList);\n         setMessages((oldMessages) => [\n            ...oldMessages,\n            { class: 'admin', content: `Welcome to the server ${name}` },\n         ]);\n      });\n\n      socket.on('usrJoin', (users, name) => {\n         setUsers((oldUsers) => users);\n         setMessages((oldMessages) => [\n            ...oldMessages,\n            { class: 'admin', content: `${name} has joined` },\n         ]);\n      });\n\n      socket.on('message', (message) => {\n         setMessages((oldMessages) => [...oldMessages, message]);\n         setSeen(false)\n      });\n\n      socket.on('seen', (name) => {\n         setSeenUsers( oldSeenUsers => [ ...oldSeenUsers, name ] )\n      });\n\n      socket.on('usrLeave', (users, name) => {\n         setUsers((oldUsers) => users);\n         setMessages((oldMessages) => [\n            ...oldMessages,\n            { class: 'admin', content: `${name} has left` },\n         ]);\n      });\n   }, []);\n\n   return (\n      <div className=\"home\">\n         <div className=\"header\">\n            <Link to={'/'}>\n               <button>Logout</button>\n            </Link>\n            <div className=\"title\">Soulfly</div>\n         </div>\n\n         <div className=\"body\">\n            <div className=\"users\">\n               {users.map((user, index) => (\n                  <div className=\"user\" key={index}>\n                     {user}\n                  </div>\n               ))}\n            </div>\n\n            <div className=\"chats\">\n               <div className=\"log\">\n\n                  {/* <div className=\"seen-status\">seen by saadman</div> */}\n\n                  {/* <div className=\"typing-status\">saadman is typing</div> */}\n\n                  {messages.map((message, index) => {\n                     if (message.class === 'admin') {\n                        return (\n                           <div className={message.class} key={index}>\n                              {message.content}\n                           </div>\n                        );\n                     } else {\n                        const classType =\n                           message.id === socket.id\n                              ? 'own-messages'\n                              : 'others-messages';\n                        return (\n                           <div className={classType} key={index}>\n                              <b>{message.name}: </b>\n                              {message.content}\n                           </div>\n                        );\n                     }\n                  })}\n               </div>\n\n               <input\n                  onChange={(e) => setMessage(e.target.value)}\n                  // onInput={(e) => showTyping()}\n\n                  onFocus={(e) => {\n                     !seen && socket.emit('seen', name)\n                     setSeen(true)\n                  }}\n\n                  value={message}\n                  onKeyDown={(e) => {\n                     if (e.key === 'Enter') {\n                        e.preventDefault();\n                        socket.emit('message', {\n                           name: name,\n                           id: socket.id,\n                           content: message,\n                        });\n                        setMessage('');\n                     }\n                  }}\n               />\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}