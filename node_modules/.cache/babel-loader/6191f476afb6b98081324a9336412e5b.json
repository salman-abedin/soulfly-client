{"ast":null,"code":"var _jsxFileName = \"/home/salman/.local/share/dot_files/Storage/Workspace/soulfly/soulfly-client/src/Home/Home.js\";\nimport './Home.css';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport queryString from 'query-string';\nimport socketIOClient from 'socket.io-client';\nlet socket;\n\nconst Home = ({\n  location\n}) => {\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [seen, setSeen] = useState(true);\n  const [seenUsers, setSeenUsers] = useState([]);\n  const [users, setUsers] = useState([]);\n  const {\n    name\n  } = queryString.parse(location.search);\n  const [typingUsers, setTypingUsers] = useState({}); // const [typingUsers, setTypingUsers] = useState([]);\n\n  useEffect(() => {\n    // socket = socketIOClient('localhost:5000');\n    socket = socketIOClient('https://soulfly.herokuapp.com/');\n    socket.emit('join', name);\n    socket.on('init', usrList => {\n      setUsers(users => usrList);\n      setMessages(oldMessages => [...oldMessages, {\n        class: 'admin',\n        content: `Welcome to the server ${name}`\n      }]);\n    });\n    socket.on('usrJoin', (users, name) => {\n      setUsers(oldUsers => users);\n      setMessages(oldMessages => [...oldMessages, {\n        class: 'admin',\n        content: `${name} has joined`\n      }]);\n    });\n    socket.on('message', message => {\n      setMessages(oldMessages => [...oldMessages, message]);\n      message.id !== socket.id && setSeen(false);\n      setSeenUsers(oldSeenUsers => []);\n    });\n    socket.on('seen', name => {\n      setSeenUsers(oldSeenUsers => [...oldSeenUsers, name]);\n    }); //TODO\n\n    socket.on('typing', ({\n      id,\n      name\n    }) => {\n      setTypingUsers(oldTypingUsers => {\n        oldTypingUsers[id] = name; // setTimeout(() => {\n        //    delete oldTypingUsers[id]\n        // }, 3000)\n\n        return oldTypingUsers;\n      }); // setTypingUsers( oldTypingUsers => {\n      //    if( oldTypingUsers.includes(name))\n      //       return [ ...oldTypingUsers, name ]\n      // })\n    }); // socket.on('typingStopped', ({id, name}) => {\n    //    setTypingUsers((oldTypingUsers) => {\n    //       delete oldTypingUsers[id]\n    //       return oldTypingUsers\n    //    });\n    // });\n\n    socket.on('usrLeave', (users, name) => {\n      setUsers(oldUsers => users);\n      setMessages(oldMessages => [...oldMessages, {\n        class: 'admin',\n        content: `${name} has left`\n      }]);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: '/',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 16\n    }\n  }, \"Logout\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Soulfly\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"users\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, users.map((user, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  }, user))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"log\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 16\n    }\n  }, messages.map((message, index) => {\n    if (message.class === 'admin') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: message.class,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 28\n        }\n      }, message.content);\n    } else {\n      const classType = message.id === socket.id ? 'own-messages' : 'others-messages';\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classType,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 28\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 31\n        }\n      }, message.name, \": \"), message.content);\n    }\n  }), seenUsers[0] && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"seen-status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 22\n    }\n  }, \"seen by \", seenUsers.join(','))), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setMessage(e.target.value),\n    onFocus: e => !seen && socket.emit('seen', name) && setSeen(true),\n    value: message,\n    onKeyDown: e => {\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        socket.emit('message', {\n          name: name,\n          id: socket.id,\n          content: message\n        });\n        setMessage('');\n      } else {\n        socket.emit('typing', {\n          id: socket.id,\n          name: name\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 16\n    }\n  }))));\n};\n\nexport default Home;","map":{"version":3,"sources":["/home/salman/.local/share/dot_files/Storage/Workspace/soulfly/soulfly-client/src/Home/Home.js"],"names":["React","useState","useEffect","Link","queryString","socketIOClient","socket","Home","location","messages","setMessages","message","setMessage","seen","setSeen","seenUsers","setSeenUsers","users","setUsers","name","parse","search","typingUsers","setTypingUsers","emit","on","usrList","oldMessages","class","content","oldUsers","id","oldSeenUsers","oldTypingUsers","map","user","index","classType","join","e","target","value","key","preventDefault"],"mappings":"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","sourcesContent":["import './Home.css';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport queryString from 'query-string';\nimport socketIOClient from 'socket.io-client';\n\nlet socket;\n\nconst Home = ({ location }) => {\n   const [messages, setMessages] = useState([]);\n   const [message, setMessage] = useState('');\n   const [seen, setSeen] = useState(true);\n   const [seenUsers, setSeenUsers] = useState([]);\n   const [users, setUsers] = useState([]);\n   const { name } = queryString.parse(location.search);\n\n   const [typingUsers, setTypingUsers] = useState({});\n   // const [typingUsers, setTypingUsers] = useState([]);\n\n   useEffect(() => {\n      // socket = socketIOClient('localhost:5000');\n      socket = socketIOClient('https://soulfly.herokuapp.com/');\n\n      socket.emit('join', name);\n\n      socket.on('init', (usrList) => {\n         setUsers((users) => usrList);\n         setMessages((oldMessages) => [\n            ...oldMessages,\n            { class: 'admin', content: `Welcome to the server ${name}` },\n         ]);\n      });\n\n      socket.on('usrJoin', (users, name) => {\n         setUsers((oldUsers) => users);\n         setMessages((oldMessages) => [\n            ...oldMessages,\n            { class: 'admin', content: `${name} has joined` },\n         ]);\n      });\n\n      socket.on('message', (message) => {\n         setMessages((oldMessages) => [...oldMessages, message]);\n         message.id !== socket.id && setSeen(false);\n         setSeenUsers((oldSeenUsers) => []);\n      });\n\n      socket.on('seen', (name) => {\n         setSeenUsers((oldSeenUsers) => [...oldSeenUsers, name]);\n      });\n\n      //TODO\n      socket.on('typing', ({id, name}) => {\n\n         setTypingUsers((oldTypingUsers) => {\n            oldTypingUsers[id] = name\n\n            // setTimeout(() => {\n            //    delete oldTypingUsers[id]\n            // }, 3000)\n\n            return oldTypingUsers\n         });\n\n         // setTypingUsers( oldTypingUsers => {\n         //    if( oldTypingUsers.includes(name))\n         //       return [ ...oldTypingUsers, name ]\n         // })\n\n      });\n\n      // socket.on('typingStopped', ({id, name}) => {\n      //    setTypingUsers((oldTypingUsers) => {\n      //       delete oldTypingUsers[id]\n      //       return oldTypingUsers\n      //    });\n      // });\n\n      socket.on('usrLeave', (users, name) => {\n         setUsers((oldUsers) => users);\n         setMessages((oldMessages) => [\n            ...oldMessages,\n            { class: 'admin', content: `${name} has left` },\n         ]);\n      });\n   }, []);\n\n   return (\n      <div className=\"home\">\n         <div className=\"header\">\n            <Link to={'/'}>\n               <button>Logout</button>\n            </Link>\n            <div className=\"title\">Soulfly</div>\n         </div>\n\n         <div className=\"body\">\n            <div className=\"users\">\n               {users.map((user, index) => (\n                  <div className=\"user\" key={index}>\n                     {user}\n                  </div>\n               ))}\n            </div>\n\n            <div className=\"chats\">\n               <div className=\"log\">\n                  {/* <div className=\"seen-status\">seen by saadman</div> */}\n\n                  {/* <div className=\"typing-status\">saadman is typing</div> */}\n\n                  {messages.map((message, index) => {\n                     if (message.class === 'admin') {\n                        return (\n                           <div className={message.class} key={index}>\n                              {message.content}\n                           </div>\n                        );\n                     } else {\n                        const classType =\n                           message.id === socket.id\n                              ? 'own-messages'\n                              : 'others-messages';\n                        return (\n                           <div className={classType} key={index}>\n                              <b>{message.name}: </b>\n                              {message.content}\n                           </div>\n                        );\n                     }\n                  })}\n\n                  {seenUsers[0] && (\n                     <div className=\"seen-status\">\n                        seen by {seenUsers.join(',')}\n                     </div>\n                  )}\n\n                  {/* {Object.values(typingUsers)[0] && ( */}\n                  {/*    <div className=\"typing-status\"> */}\n                  {/*       Being typed by {Object.values(typingUsers).join(',')} */}\n                  {/*    </div> */}\n                  {/* )} */}\n\n                  {/* {typingUsers[0] && ( */}\n                  {/*    <div className=\"typing-status\"> */}\n                  {/*       Being typed by {typingUsers.join(',')} */}\n                  {/*    </div> */}\n                  {/* )} */}\n\n                  {/* {( */}\n                  {/*    <div className=\"typing-status\"> */}\n                  {/*       Being typed by {Object.values(typingUsers).join(',')} */}\n                  {/*    </div> */}\n                  {/* )} */}\n\n               </div>\n\n               <input\n                  onChange={(e) => setMessage(e.target.value)}\n                  onFocus={(e) => !seen && socket.emit('seen', name) && setSeen(true) }\n                  value={message}\n                  onKeyDown={(e) => {\n                     if (e.key === 'Enter') {\n                        e.preventDefault();\n                        socket.emit('message', {\n                           name: name,\n                           id: socket.id,\n                           content: message,\n                        });\n                        setMessage('');\n                     }else{\n                        socket.emit('typing', { id: socket.id, name: name })\n                     }\n                  }}\n               />\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}